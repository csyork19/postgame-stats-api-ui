{"ast":null,"code":"var _jsxFileName = \"/home/csyork/Documents/Freelance Projects/postgame-stats-api-website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\nfunction App() {\n  _s();\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/data').then(response => response.json()).then(data => {\n      // Transform the data to be an array of objects\n      const keys = Object.keys(data);\n      const rowCount = Object.keys(data[keys[0]]).length;\n      const formattedRows = [];\n      for (let i = 0; i < rowCount; i++) {\n        const row = {};\n        keys.forEach(key => {\n          row[key] = data[key][i];\n        });\n        formattedRows.push(row);\n      }\n      setRows(formattedRows);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [\"GAME_DATE\", \"MATCHUP\", \"MIN\", \"PTS\", \"AST\", \"REB\", \"OREB\", \"DREB\", \"STL\", \"BLK\", \"TOV\", \"PF\", \"PLUS_MINUS\", \"FGM\", \"FGA\", \"FG_PCT\", \"FG3M\", \"FG3A\", \"FG3_PCT\", \"FTM\", \"FTA\", \"FT_PCT\", \"WL\"].map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: Object.keys(row).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row[key]\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"QhZRz5N6UNmfyDDz0Qxv5sb0dZg=\", false, function () {\n  return [useStyles];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","jsxDEV","_jsxDEV","useStyles","table","minWidth","App","_s","classes","rows","setRows","fetch","then","response","json","data","keys","Object","rowCount","length","formattedRows","i","row","forEach","key","push","catch","error","console","component","children","className","map","header","align","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["/home/csyork/Documents/Freelance Projects/postgame-stats-api-website/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nfunction App() {\n    const classes = useStyles();\n    const [rows, setRows] = useState([]);\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:5000/api/data')\n            .then(response => response.json())\n            .then(data => {\n                // Transform the data to be an array of objects\n                const keys = Object.keys(data);\n                const rowCount = Object.keys(data[keys[0]]).length;\n                const formattedRows = [];\n\n                for (let i = 0; i < rowCount; i++) {\n                    const row = {};\n                    keys.forEach(key => {\n                        row[key] = data[key][i];\n                    });\n                    formattedRows.push(row);\n                }\n\n                setRows(formattedRows);\n            })\n            .catch(error => console.error('Error fetching data:', error));\n    }, []);\n\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        {[\n                            \"GAME_DATE\", \"MATCHUP\", \"MIN\", \"PTS\", \"AST\", \"REB\", \"OREB\",\n                            \"DREB\", \"STL\", \"BLK\", \"TOV\", \"PF\", \"PLUS_MINUS\", \"FGM\",\n                            \"FGA\", \"FG_PCT\", \"FG3M\", \"FG3A\", \"FG3_PCT\", \"FTM\", \"FTA\",\n                            \"FT_PCT\", \"WL\"\n                        ].map(header => (\n                            <TableCell key={header} align=\"right\">{header}</TableCell>\n                        ))}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row, index) => (\n                        <TableRow key={index}>\n                            {Object.keys(row).map(key => (\n                                <TableCell key={key} align=\"right\">{row[key]}</TableCell>\n                            ))}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}